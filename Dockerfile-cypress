# Dockerfile

# Use ruby image to build our own image
# TODO: change based when we change version of ruby
FROM --platform=linux/x86_64 ruby:3.1.2-alpine as base

# Ensure that we work in UTF 8
ENV LANG C.UTF-8 # ensure that the encoding is UTF8
ENV LANGUAGE C.UTF-8 # ensure that the encoding is UTF8

ARG RAILS_ENV=production
ARG NODE_ENV=production

# Use a persistent volume for the gems installed by the bundler
ENV BUNDLE_PATH /var/bundler

ARG DEVISE_SECRET

RUN apk add \
      build-base \
      freetds-dev \
      git \
      less \
      netcat-openbsd \
      postgresql-client \
      postgresql-dev \
      pkgconfig \
      openssl \
      shared-mime-info \
      tzdata \
      yarn \
    && rm -rf /var/cache/apk/*

# Install bundler for this Docker image
RUN gem install bundler:2.3.26

# WORKDIR /setup
ADD . /opt/culture
WORKDIR /opt/culture

# Just not use dev here
# TODO: we need to check this
RUN bin/bundle install --without development
RUN bin/vite install
# RUN bin/vite install

# The pre-compile will be done as part of the deploy of the image
# The precompile will also deal with the webpacker assets
# RUN bin/rake assets:precompile --trace
# bin/vite build --clear

# We expose the port
EXPOSE 5100

# CMD script/culture_start.sh
CMD ["tail", "-f", "/dev/null"]

# docker run -it -v $PWD:/e2e -w /e2e cypress/included:12.3.0
# https://dev.to/sanzhanov/running-cypress-tests-in-docker-containers-using-different-docker-images-4lp0